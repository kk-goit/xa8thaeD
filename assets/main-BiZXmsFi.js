import{a as p}from"./vendor-CNNbG8jS.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function r(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=r(s);fetch(s.href,i)}})();const y=document.querySelector(".mobile-menu"),m=document.querySelector(".mobile-menu-open-btn"),h=document.querySelector(".mobile-menu-close-btn");m.addEventListener("click",()=>{y.classList.add("is-open")});h.addEventListener("click",()=>{y.classList.remove("is-open")});document.addEventListener("DOMContentLoaded",function(){const t=document.querySelectorAll(".nav-item"),e=window.location.pathname;t.forEach(r=>{const n=r.querySelector(".nav-link");r.classList.remove("active"),n.getAttribute("href").substring(1)===e&&r.classList.add("active")})});const u=new Date().toISOString().slice(0,10),l=document.querySelector(".blockquote-text"),d=document.querySelector(".quote-author"),a=JSON.parse(localStorage.getItem("quoteOfDay"));a&&a.date===u?(l.innerHTML=a.quote,d.innerHTML=a.author):p.get("https://your-energy.b.goit.study/api/quote").then(({data:t})=>{localStorage.setItem("quoteOfDay",JSON.stringify({quote:t.quote,author:t.author,date:u})),l.innerHTML=t.quote,d.innerHTML=t.author}).catch(t=>console.log(t));const L={baseURL:"https://your-energy.b.goit.study/api",timeout:1e4,headers:{"Content-Type":"application/json"}},v=["Body parts","Muscles","Equipment"];class b{constructor(){this.api=p.create(L),this.api.interceptors.response.use(e=>e.data,e=>Promise.reject(e))}handleDefaultError(e){switch(e.status){case 400:return"Please check your input and try again.";case 404:return"This training page took a rest day. Please try again.";case 500:return"Our fitness server needs a quick breather. Please try again.";default:if(e.response){const{data:n}=e.response;return n.message||"Something unexpected happened"}else return e.request?e.request.statusText:`Error: ${e.message}`}}async getExercises(e={}){if(!e.page||!e.limit||typeof e.page!="number"||typeof e.limit!="number")return"Please specify page and items per page";try{return await this.api.get("/exercises",{params:e})}catch(r){switch(r.status){case 409:return"Select a filter to view results";case 500:return"Our fitness server needs a quick breather. Please try again.";default:return this.handleDefaultError(r)}}}async addRating(e,r,n,s){const i={rate:r,email:n,review:s};try{return await this.api.patch(`/exercises/${e}/rating`,i)}catch(o){switch(o.status){case 404:return"Exercise not found. Try exploring similar ones.";case 409:return"Looks like your email is already part of this exercise community!";default:return this.handleDefaultError(o)}}}async getExerciseById(e){try{return await this.api.get(`/exercises/${e}`)}catch(r){switch(r.status){case 404:return"Exercise not found. Try exploring similar ones.";case 409:return"Looks like your email is already part of this exercise community!";default:return this.handleDefaultError(r)}}}async getExercisesByFilter(e={}){if(!e.page||!e.limit||typeof e.page!="number"||typeof e.limit!="number")return"Please specify page and items per page";if(!v.includes(e.filter))return"Filter not found. Check out our available categories";try{return await this.api.get("/filters",{params:e})}catch(r){switch(r.status){case 404:return"The way to exercises not found. Try exploring similar ones.";default:return this.handleDefaultError(r)}}}async orderSubscription(e){if(!e)return"Email is not provided";try{return await this.api.post("/subscription",{email:e})}catch(r){switch(r.status){case 404:return"The way to subscription not found. Try exploring similar ones.";case 409:return"Looks like such a subscription is already part of this community!";default:return this.handleDefaultError(r)}}}async getExercisesByIdList(e){if(!e.length)return"Please specify list of exercises to get";const r=e.map(async s=>await this.getExerciseById(s));return(await Promise.allSettled(r)).filter(s=>s.status==="fulfilled").map(s=>s.value)}}const E=new b,c=document.querySelector(".group-list");c.addEventListener("click",t=>{const e=t.target.closest(".group-list__item");e&&console.log(e.dataset.name)});const q=({filter:t,name:e,imgURL:r})=>`
    <div
      class="group-list__item"
      data-name="${e}"
    >
      <img
        class="group-list__item-image"
        src="${r}"
      >
      <div class="group-list__item-image-filter"></div>
      <div class="group-list__item-title">
        ${e}
      </div>
      <div class="group-list__item-subtitle">
        ${t}
      </div>
    </div>
  `,x=t=>t.map(q).join(""),S=t=>{if(!c)return;const e=x(t);c.innerHTML=e},w=async t=>await E.getExercisesByFilter(t),g=async({filter:t="Muscles",page:e=1,limit:r=12}={})=>{const n=await w({filter:t,page:e,limit:r});S(n.results)};c&&g();const T=(t,e)=>{e.forEach(r=>{r.classList.remove("active")}),t.classList.add("active"),g({filter:t.textContent})},f=Array.from(document.querySelectorAll(".exercises-menu-button"));f.forEach(t=>t.addEventListener("click",()=>T(t,f)));
//# sourceMappingURL=main-BiZXmsFi.js.map
