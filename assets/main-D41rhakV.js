import{a as d}from"./vendor-BAvsyV0G.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();const u=document.querySelector(".mobile-menu"),f=document.querySelector(".mobile-menu-open-btn"),p=document.querySelector(".mobile-menu-close-btn");f.addEventListener("click",()=>{u.classList.add("is-open")});p.addEventListener("click",()=>{u.classList.remove("is-open")});document.addEventListener("DOMContentLoaded",function(){const s=document.querySelectorAll(".nav-item"),e=window.location.pathname;s.forEach(t=>{const n=t.querySelector(".nav-link");t.classList.remove("active"),n.getAttribute("href").substring(1)===e&&t.classList.add("active")})});const y={baseURL:"https://your-energy.b.goit.study/api",timeout:1e4,headers:{"Content-Type":"application/json"}},m=["Body parts","Muscles","Equipment"];class g{constructor(){this.api=d.create(y),this.api.interceptors.response.use(e=>e.data,e=>Promise.reject(e))}handleDefaultError(e){switch(e.status){case 400:return"Please check your input and try again.";case 404:return"This training page took a rest day. Please try again.";case 500:return"Our fitness server needs a quick breather. Please try again.";default:if(e.response){const{data:n}=e.response;return n.message||"Something unexpected happened"}else return e.request?e.request.statusText:`Error: ${e.message}`}}async getExercises(e={}){if(!e.page||!e.limit||typeof e.page!="number"||typeof e.limit!="number")return"Please specify page and items per page";try{return await this.api.get("/exercises",{params:e})}catch(t){switch(t.status){case 409:return"Select a filter to view results";case 500:return"Our fitness server needs a quick breather. Please try again.";default:return this.handleDefaultError(t)}}}async addRating(e,t,n,r){const i={rate:t,email:n,review:r};try{return await this.api.patch(`/exercises/${e}/rating`,i)}catch(o){switch(o.status){case 404:return"Exercise not found. Try exploring similar ones.";case 409:return"Looks like your email is already part of this exercise community!";default:return this.handleDefaultError(o)}}}async getExerciseById(e){try{return await this.api.get(`/exercises/${e}`)}catch(t){switch(t.status){case 404:return"Exercise not found. Try exploring similar ones.";case 409:return"Looks like your email is already part of this exercise community!";default:return this.handleDefaultError(t)}}}async getExercisesByFilter(e={}){if(!e.page||!e.limit||typeof e.page!="number"||typeof e.limit!="number")return"Please specify page and items per page";if(!m.includes(e.filter))return"Filter not found. Check out our available categories";try{return await this.api.get("/filters",{params:e})}catch(t){switch(t.status){case 404:return"The way to exercises not found. Try exploring similar ones.";default:return this.handleDefaultError(t)}}}async orderSubscription(e){if(!e)return"Email is not provided";try{return await this.api.post("/subscription",{email:e})}catch(t){switch(t.status){case 404:return"The way to subscription not found. Try exploring similar ones.";case 409:return"Looks like such a subscription is already part of this community!";default:return this.handleDefaultError(t)}}}async getExercisesByIdList(e){if(!e.length)return"Please specify list of exercises to get";const t=e.map(async r=>await this.getExerciseById(r));return(await Promise.allSettled(t)).filter(r=>r.status==="fulfilled").map(r=>r.value)}}const h=new g,a=document.querySelector(".group-list");a.addEventListener("click",s=>{const e=s.target.closest(".group-list__item");e&&console.log(e.dataset.name)});const v=({filter:s,name:e,imgURL:t})=>`
    <div
      class="group-list__item"
      data-name="${e}"
    >
      <img
        class="group-list__item-image"
        src="${t}"
      >
      <div class="group-list__item-image-filter"></div>
      <div class="group-list__item-title">
        ${e}
      </div>
      <div class="group-list__item-subtitle">
        ${s}
      </div>
    </div>
  `,L=s=>s.map(v).join(""),E=s=>{if(!a)return;const e=L(s);a.innerHTML=e},b=async s=>await h.getExercisesByFilter(s),l=async({filter:s="Muscles",page:e=1,limit:t=12}={})=>{const n=await b({filter:s,page:e,limit:t});E(n.results)};a&&l();const x=(s,e)=>{e.forEach(t=>{t.classList.remove("active")}),s.classList.add("active"),l({filter:s.textContent})},c=Array.from(document.querySelectorAll(".exercises-menu-button"));c.forEach(s=>s.addEventListener("click",()=>x(s,c)));
//# sourceMappingURL=main-D41rhakV.js.map
