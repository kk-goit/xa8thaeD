{"version":3,"file":"main-CJs1ix4r.js","sources":["../../src/js/menu.js","../../src/js/header.js","../../src/js/api/your-energy-api.js","../../src/js/quote-of-day.js","../../src/js/pagination-exercises.js","../../src/js/exercises.js","../../src/js/group-list.js","../../src/js/exercises-menu.js"],"sourcesContent":["const mobileMenu = document.querySelector('.mobile-menu');\nconst mobileMenuOpenButton = document.querySelector('.mobile-menu-open-btn');\nconst mobileMenuCloseButton = document.querySelector('.mobile-menu-close-btn');\n\nmobileMenuOpenButton.addEventListener('click', () => {\n  mobileMenu.classList.add('is-open');\n});\n\nmobileMenuCloseButton.addEventListener('click', () => {\n  mobileMenu.classList.remove('is-open');\n});\n","document.addEventListener('DOMContentLoaded', () => {\n    const currentPath = window.location.pathname;\n    document.querySelectorAll('.nav-item .nav-link').forEach(link => {\n        const item = link.closest('.nav-item');\n        item.classList.toggle(\n            'active',\n            currentPath.endsWith(link.getAttribute('href').substring(1))\n        );\n    });\n});\n","import axios from 'axios';\n\nconst API_CONFIG = {\n    baseURL: 'https://your-energy.b.goit.study/api',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n};\n\nconst FILTER_TYPES = ['Body parts', 'Muscles', 'Equipment'];\n\n\nclass YourEnergy {\n    constructor() {\n        this.api = axios.create(API_CONFIG);\n\n        this.api.interceptors.response.use(\n            (response) => response.data,\n            (error) => Promise.reject(error),\n        );\n    }\n\n\n    handleDefaultError(error) {\n        const status = error.status;\n\n        switch (status) {\n            case 400:\n                return 'Please check your input and try again.';\n            case 404:\n                return 'This training page took a rest day. Please try again.';\n            case 500:\n                return 'Our fitness server needs a quick breather. Please try again.';\n            default:\n                if (error.response) {\n                    const { data } = error.response;\n                    return (data.message || 'Something unexpected happened');\n                }\n                else if (error.request) {\n                    return (error.request.statusText);\n                }\n                else {\n                    return (`Error: ${error.message}`);\n                }\n        }\n    }\n\n\n    async getExercises(params = {}) {\n        if (!params.page || !params.limit || typeof params.page !== 'number' || typeof params.limit !== 'number') {\n            return 'Please specify page and items per page';\n        }\n\n        try {\n            return await this.api.get('/exercises', { params });\n        } catch (error) {\n            switch (error.status) {\n                case 409:\n                    return 'Select a filter to view results';\n                case 500:\n                    return 'Our fitness server needs a quick breather. Please try again.';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async addRating(id, rate, email, review) {\n        const data = { rate, email, review };\n\n        try {\n            return await this.api.patch(`/exercises/${id}/rating`, data);\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'Exercise not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like your email is already part of this exercise community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async getExerciseById(id) {\n        try {\n            return await this.api.get(`/exercises/${id}`);\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'Exercise not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like your email is already part of this exercise community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async getExercisesByFilter(params = {}) {\n        if (!params.page || !params.limit || typeof params.page !== 'number' || typeof params.limit !== 'number') {\n            return 'Please specify page and items per page';\n        }\n\n        if (!FILTER_TYPES.includes(params.filter)) {\n            return 'Filter not found. Check out our available categories';\n        }\n\n        try {\n            return await this.api.get('/filters', { params });\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'The way to exercises not found. Try exploring similar ones.';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async orderSubscription(email) {\n        if (!email) return 'Email is not provided';\n\n        try {\n            return await this.api.post('/subscription', { email });\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'The way to subscription not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like such a subscription is already part of this community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n    async getExercisesByIdList(list) {\n        if (!list.length) return 'Please specify list of exercises to get';\n\n        const promises = list.map(async id => await this.getExerciseById(id));\n        const results = await Promise.allSettled(promises);\n\n        return results.filter(result => result.status === 'fulfilled')\n            .map(result => result.value);\n    }\n\n\n    async getQuote() {\n\n        try {\n            return await this.api.get('/quote');\n        } catch (error) {\n            return this.handleDefaultError(error);\n        }\n    }\n}\n\n\nconst yourEnergy = new YourEnergy();\n\nexport default yourEnergy;","import yourEnergy from './api/your-energy-api';\n\nconst today = new Date().toISOString().slice(0, 10);\nconst quote = document.querySelector(\".blockquote-text\");\nconst author = document.querySelector(\".quote-author\")\n\nconst quoteInStorage = JSON.parse(localStorage.getItem(\"quoteOfDay\"));\n\nif(quoteInStorage && quoteInStorage.date === today) {\n    quote.innerHTML = quoteInStorage.quote;\n    author.innerHTML = quoteInStorage.author; \n} else {\n    yourEnergy.getQuote()\n        .then((response) => {\n            if(typeof response !== \"string\")  {\n                localStorage.setItem('quoteOfDay', JSON.stringify({\n                    quote: response.quote,\n                    author: response.author,\n                    date: today\n                }))\n                quote.innerHTML = response.quote;\n                author.innerHTML = response.author;\n            } else {\n                console.log(response);\n            }\n        })\n}\n","let currentPage = 1;\nfunction setCurrentPage(page) {\n    currentPage = page;\n}\n\nfunction getCurrentPage() {\n    return currentPage;\n}\n\nasync function renderPaginationButtons(\n    totalPages,\n    fetchDataFunction,\n    ...fetchDataParams\n) {\n    // console.log(...fetchDataParams);\n    const pagination = document.querySelector('.pagination');\n    pagination.innerHTML = '';\n\n    const prevButton = createPrevButton();\n    pagination.appendChild(prevButton);\n\n    const maxVisibleButtons = 5;\n    let startPage = Math.max(\n        1,\n        currentPage - Math.floor(maxVisibleButtons / 2)\n    );\n    let endPage = Math.min(totalPages, startPage + maxVisibleButtons - 1);\n    if (endPage - startPage + 1 < maxVisibleButtons) {\n        startPage = Math.max(1, endPage - maxVisibleButtons + 1);\n    }\n\n    if (startPage > 1) {\n        addPageButton(1);\n        if (startPage > 2) {\n            addEllipsis();\n        }\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n        addPageButton(i);\n    }\n\n    if (endPage < totalPages) {\n        if (endPage < totalPages - 1) {\n            addEllipsis();\n        }\n        addPageButton(totalPages);\n    }\n\n    const nextButton = createNextButton();\n    pagination.appendChild(nextButton);\n\n    function addPageButton(pageNumber) {\n        const button = document.createElement('button');\n        button.textContent = pageNumber;\n        button.classList.add('page-button');\n        if (pageNumber === currentPage) {\n            button.classList.add('active');\n        }\n        button.addEventListener('click', async () => {\n            setCurrentPage(pageNumber);\n            // await fetchDataFunction(currentPage, ...fetchDataParams);\n            await fetchDataFunction(...fetchDataParams);\n            renderPaginationButtons(\n                totalPages,\n                fetchDataFunction,\n                ...fetchDataParams\n            );\n            fetchDataParams = '';\n        });\n        pagination.appendChild(button);\n    }\n\n    function addEllipsis() {\n        const ellipsis = document.createElement('span');\n        ellipsis.textContent = '...';\n        ellipsis.classList.add('ellipsis');\n        pagination.appendChild(ellipsis);\n    }\n\n    function createPrevButton() {\n        const prevButton = document.createElement('button');\n        prevButton.innerHTML = '←';\n        prevButton.classList.add('page-button');\n        prevButton.disabled = currentPage === 1;\n        prevButton.addEventListener('click', async () => {\n            if (currentPage > 1) {\n                setCurrentPage(currentPage - 1);\n                // await fetchDataFunction(currentPage, ...fetchDataParams); // Pass currentPage and additional params\n                await fetchDataFunction(...fetchDataParams);\n                renderPaginationButtons(\n                    totalPages,\n                    fetchDataFunction,\n                    ...fetchDataParams\n                );\n                fetchDataParams = '';\n            }\n        });\n        return prevButton;\n    }\n\n    function createNextButton() {\n        const nextButton = document.createElement('button');\n        nextButton.innerHTML = '→';\n        nextButton.classList.add('page-button');\n        nextButton.disabled = currentPage === totalPages;\n        nextButton.addEventListener('click', async () => {\n            if (currentPage < totalPages) {\n                setCurrentPage(currentPage + 1);\n                // await fetchDataFunction(currentPage, ...fetchDataParams);\n                await fetchDataFunction(...fetchDataParams);\n                renderPaginationButtons(\n                    totalPages,\n                    fetchDataFunction,\n                    ...fetchDataParams\n                );\n                fetchDataParams = '';\n            }\n        });\n        return nextButton;\n    }\n}\n\nexport { renderPaginationButtons, getCurrentPage };\n","import {\n    renderPaginationButtons,\n    getCurrentPage,\n} from './pagination-exercises.js';\nimport yourEnergy from './api/your-energy-api.js';\nconst exercisesForm = document.querySelector('.exercises-form');\n\n// const notFoundTextEl = document.querySelector('.not-found-text');\n\nlet limit = 10;\nlet categoryName = 'muscles';\nlet categoryValue = '';\nlet keyword = '';\n\nexercisesForm.addEventListener('submit', handlerSearchFormSubmit);\n\nfunction handlerSearchFormSubmit(e) {\n    e.preventDefault();\n\n    keyword = e.target.elements.search.value.trim();\n    console.log(keyword);\n    if (!keyword) {\n        ('Please, enter a search words');\n        return;\n    }\n    searchListOfExercises();\n    e.target.elements.search.value = '';\n}\n\nasync function searchListOfExercises() {\n    const page = getCurrentPage();\n    const listOfExercises = await yourEnergy.getExercises({\n        page,\n        limit,\n        [categoryName]: categoryValue,\n        keyword,\n    });\n    renderUserListExercises(listOfExercises.results);\n}\n\nasync function findListOfExercises(catName, catValue) {\n    const page = getCurrentPage();\n    switch (catName) {\n        case 'Muscles':\n            categoryName = 'muscles';\n            break;\n        case 'Equipment':\n            categoryName = 'equipment';\n            break;\n        case 'Body parts':\n            categoryName = 'bodypart';\n            break;\n    }\n    categoryValue = catValue;\n    try {\n        const listOfExercises = await yourEnergy.getExercises({\n            page,\n            limit,\n            [categoryName]: categoryValue,\n        });\n\n        // if (listOfExercises.results.length === 0) {\n        //     clearMarkup();\n        //     // console.log(\"length\",listOfExercises.results.length);\n        //     return;\n        // }\n\n        exercisesForm.classList.remove('visually-hidden');\n\n        renderUserListExercises(listOfExercises.results);\n        renderPaginationButtons(\n            listOfExercises.totalPages,\n            findListOfExercises,\n            categoryName,\n            categoryValue\n        );\n    } catch (err) {\n        clearMarkup();\n        console.log(err);\n    } finally {\n        console.log('Buy');\n        // form.reset();\n    }\n}\n\nconst exercises = document.querySelector('.group-list');\n\nfunction renderUserListExercises(listExercises) {\n    const markup = listExercises\n        .map(\n            exercise => `\n<li class=\"exercise-card\" data-id=${exercise._id}>\n  <div class=\"top-row\">\n  <div class=\"rating\">\n        <p class=\"badge\">WORKOUT</p>\n        <div class=\"rating-star\">\n            <span class='text-star'>${exercise.rating}</span>\n           <svg class=\"star-icon\" width=\"18\" height=\"18\">\n                    <use href=\"./img/icons.svg#icon-star-18\"></use>\n                </svg>\n        </div>\n        </div>\n        <button class=\"start\">\n            Start\n            <svg class=\"icon-arrow-right\" width=\"13\" height=\"13\">\n                    <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n        </button>\n    </div>\n    <div class=\"exercise-info\">\n    <div class=\"icon-wrapper\">\n    <svg class=\"arrow-running-icon\" width=\"14\" height=\"16\">                     \n        <use href=\"./img/icons.svg#icon-running-stick-figure\"></use>\n    </svg>\n</div>\n        <p class=\"exercise-name\">${exercise.name\n            .split(' ')\n            .slice(0, 2)\n            .join(' ')}</p>\n    </div>\n    <div class=\"details\">\n        <p>Burned calories: <span>${exercise.burnedCalories}</span></p>\n        <p>Body part: <span>${exercise.bodyPart}</span></p>\n        <p>Target: <span>${exercise.target}</span></p>\n    </div>\n</li>`\n        )\n        .join('');\n\n    exercises.innerHTML = markup;\n}\n\nfunction clearMarkup() {\n    exercises.innerHTML = '';\n}\n\nexport { findListOfExercises };\n","import api from './api/your-energy-api';\nimport { findListOfExercises } from './exercises.js';\nimport {\n    renderPaginationButtons,\n    getCurrentPage,\n} from './pagination-exercises.js';\nlet activeButtonText = ''; // By Ruslan Isupov Add global variable\n\n// const container = document.querySelector('.group-list');\n// const sectionTitle = document.querySelector(\".section-title\");\n\n// container.addEventListener('click', (event) => {\n//   const element = event.target.closest('.group-list__item');\n//   if (element) {\n//     console.log(element.dataset.name)\n//     // TODO you can call to open all exercises here\n//     sectionTitle.innerHTML = `Exercises / <span class='exercises-category'>${element.dataset.name}</span>`\n//   }\n// });\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const container = document.querySelector('.group-list');\n    const sectionTitle = document.querySelector('.section-title');\n\n    if (container) {\n        container.addEventListener('click', event => {\n            const element = event.target.closest('.group-list__item');\n            if (element) {\n                // console.log('catValue', element.dataset.name);\n                findListOfExercises(activeButtonText, element.dataset.name); //Added by Ruslan Isupov click card and make a request from server;\n                sectionTitle.innerHTML = `Exercises / <span class='exercises-category'>${element.dataset.name}</span>`;\n            }\n        });\n\n        renderGroupListByFilter();\n    } else {\n        console.warn('Елемент .group-list не знайдено.');\n    }\n});\n\nconst getGroupItemHTMLString = ({ filter, name, imgURL }) =>\n    `\n    <div\n      class=\"group-list__item\"\n      data-name=\"${name}\"\n    >\n      <img\n        class=\"group-list__item-image\"\n        src=\"${imgURL}\"\n      >\n      <div class=\"group-list__item-image-filter\"></div>\n      <div class=\"group-list__item-title\">\n        ${name}\n      </div>\n      <div class=\"group-list__item-subtitle\">\n        ${filter}\n      </div>\n    </div>\n  `;\n\nconst getGroupListHTMLString = categoryList => {\n    return categoryList.map(getGroupItemHTMLString).join('');\n};\n\nconst renderGroupList = categoryList => {\n    const container = document.querySelector('.group-list'); // Added by Inna Boiko\n    if (!container) return; // if no container, do nothing\n    const categoryListHTMLString = getGroupListHTMLString(categoryList);\n    container.innerHTML = categoryListHTMLString;\n};\n\nconst fetchDataByFilter = async params => {\n    return await api.getExercisesByFilter(params);\n};\n\nexport const renderGroupListByFilter = async ({\n    filter = 'Muscles',\n    page = 1,\n    limit = 12,\n} = {}) => {\n    const data = await fetchDataByFilter({ filter, page, limit });\n\n    page = getCurrentPage(); // Added  by Ruslan Isupov\n    activeButtonText = filter.toLowerCase(); // Take filter and save in global variable \"activeButtonText\"\n    renderGroupList(data.results);\n    //  Pagination\n    renderPaginationButtons(\n        data.totalPages,\n        renderGroupListByFilter,\n        activeButtonText\n    );\n};\n\n// if (container) renderGroupListByFilter();\n","import { renderGroupListByFilter } from './group-list';\n\nconst buttons = Array.from(document.querySelectorAll('.exercises-menu-button'));\n\nconst execisesMenuButtonHandler = (element) => {\n    const sectionTitle = document.querySelector(\".section-title\");\n    sectionTitle.innerHTML = \"Exercises\";\n    buttons.forEach(el => {\n        el.classList.remove(\"active\");\n    });\n    element.classList.add(\"active\");\n\n    renderGroupListByFilter({ filter: element.textContent })\n}\n\nbuttons.forEach(el =>\n    el.addEventListener('click', () => execisesMenuButtonHandler(el))\n);"],"names":["mobileMenu","mobileMenuOpenButton","mobileMenuCloseButton","currentPath","link","API_CONFIG","FILTER_TYPES","YourEnergy","axios","response","error","data","params","id","rate","email","review","list","promises","result","yourEnergy","today","quote","author","quoteInStorage","currentPage","setCurrentPage","page","getCurrentPage","renderPaginationButtons","totalPages","fetchDataFunction","fetchDataParams","pagination","prevButton","createPrevButton","maxVisibleButtons","startPage","endPage","addPageButton","addEllipsis","nextButton","createNextButton","pageNumber","button","ellipsis","exercisesForm","limit","categoryName","categoryValue","keyword","handlerSearchFormSubmit","e","searchListOfExercises","listOfExercises","renderUserListExercises","findListOfExercises","catName","catValue","err","clearMarkup","exercises","listExercises","markup","exercise","activeButtonText","container","sectionTitle","event","element","renderGroupListByFilter","getGroupItemHTMLString","filter","name","imgURL","getGroupListHTMLString","categoryList","renderGroupList","categoryListHTMLString","fetchDataByFilter","api","buttons","execisesMenuButtonHandler","el"],"mappings":"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"}