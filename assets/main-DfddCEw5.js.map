{"version":3,"file":"main-DfddCEw5.js","sources":["../../src/js/menu.js","../../src/js/header.js","../../src/js/api/your-energy-api.js","../../src/js/quote-of-day.js","../../src/js/group-list.js","../../src/js/exercises-menu.js","../../src/js/favorites.js","../../src/js/api/toast-manager.js","../../src/js/footer.js"],"sourcesContent":["const mobileMenu = document.querySelector('.mobile-menu');\nconst mobileMenuOpenButton = document.querySelector('.mobile-menu-open-btn');\nconst mobileMenuCloseButton = document.querySelector('.mobile-menu-close-btn');\n\nmobileMenuOpenButton.addEventListener('click', () => {\n  mobileMenu.classList.add('is-open');\n});\n\nmobileMenuCloseButton.addEventListener('click', () => {\n  mobileMenu.classList.remove('is-open');\n});\n","document.addEventListener('DOMContentLoaded', () => {\n    const currentPath = window.location.pathname;\n    document.querySelectorAll('.nav-item .nav-link').forEach(link => {\n        const item = link.closest('.nav-item');\n        item.classList.toggle(\n            'active',\n            currentPath.endsWith(link.getAttribute('href').substring(1))\n        );\n    });\n});\n","import axios from 'axios';\n\nconst API_CONFIG = {\n    baseURL: 'https://your-energy.b.goit.study/api',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n};\n\nconst FILTER_TYPES = ['Body parts', 'Muscles', 'Equipment'];\n\n\nclass YourEnergy {\n    constructor() {\n        this.api = axios.create(API_CONFIG);\n\n        this.api.interceptors.response.use(\n            (response) => response.data,\n            (error) => Promise.reject(error),\n        );\n    }\n\n\n    handleDefaultError(error) {\n        const status = error.status;\n\n        switch (status) {\n            case 400:\n                return 'Please check your input and try again.';\n            case 404:\n                return 'This training page took a rest day. Please try again.';\n            case 500:\n                return 'Our fitness server needs a quick breather. Please try again.';\n            default:\n                if (error.response) {\n                    const { data } = error.response;\n                    return (data.message || 'Something unexpected happened');\n                }\n                else if (error.request) {\n                    return (error.request.statusText);\n                }\n                else {\n                    return (`Error: ${error.message}`);\n                }\n        }\n    }\n\n\n    async getExercises(params = {}) {\n        if (!params.page || !params.limit || typeof params.page !== 'number' || typeof params.limit !== 'number') {\n            return 'Please specify page and items per page';\n        }\n\n        try {\n            return await this.api.get('/exercises', { params });\n        } catch (error) {\n            switch (error.status) {\n                case 409:\n                    return 'Select a filter to view results';\n                case 500:\n                    return 'Our fitness server needs a quick breather. Please try again.';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async addRating(id, rate, email, review) {\n        const data = { rate, email, review };\n\n        try {\n            return await this.api.patch(`/exercises/${id}/rating`, data);\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'Exercise not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like your email is already part of this exercise community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async getExerciseById(id) {\n        try {\n            return await this.api.get(`/exercises/${id}`);\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'Exercise not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like your email is already part of this exercise community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async getExercisesByFilter(params = {}) {\n        if (!params.page || !params.limit || typeof params.page !== 'number' || typeof params.limit !== 'number') {\n            return 'Please specify page and items per page';\n        }\n\n        if (!FILTER_TYPES.includes(params.filter)) {\n            return 'Filter not found. Check out our available categories';\n        }\n\n        try {\n            return await this.api.get('/filters', { params });\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'The way to exercises not found. Try exploring similar ones.';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async orderSubscription(email) {\n        if (!email) return 'Email is not provided';\n\n        try {\n            return await this.api.post('/subscription', { email });\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'The way to subscription not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like such a subscription is already part of this community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n    async getExercisesByIdList(list) {\n        if (!list.length) return 'Please specify list of exercises to get';\n\n        const promises = list.map(async id => await this.getExerciseById(id));\n        const results = await Promise.allSettled(promises);\n\n        return results.filter(result => result.status === 'fulfilled')\n            .map(result => result.value);\n    }\n\n\n    async getQuote() {\n\n        try {\n            return await this.api.get('/quote');\n        } catch (error) {\n            return this.handleDefaultError(error);\n        }\n    }\n}\n\n\nconst yourEnergy = new YourEnergy();\n\nexport default yourEnergy;","import yourEnergy from './api/your-energy-api';\n\nconst today = new Date().toISOString().slice(0, 10);\nconst quote = document.querySelector(\".blockquote-text\");\nconst author = document.querySelector(\".quote-author\")\n\nconst quoteInStorage = JSON.parse(localStorage.getItem(\"quoteOfDay\"));\n\nif(quoteInStorage && quoteInStorage.date === today) {\n    quote.innerHTML = quoteInStorage.quote;\n    author.innerHTML = quoteInStorage.author; \n} else {\n    yourEnergy.getQuote()\n        .then((response) => {\n            if(typeof response !== \"string\")  {\n                localStorage.setItem('quoteOfDay', JSON.stringify({\n                    quote: response.quote,\n                    author: response.author,\n                    date: today\n                }))\n                quote.innerHTML = response.quote;\n                author.innerHTML = response.author;\n            } else {\n                console.log(response);\n            }\n        })\n}\n","import api from './api/your-energy-api'\n\n// const container = document.querySelector('.group-list');\n// const sectionTitle = document.querySelector(\".section-title\");\n\n// container.addEventListener('click', (event) => {\n//   const element = event.target.closest('.group-list__item');\n//   if (element) {\n//     console.log(element.dataset.name)\n//     // TODO you can call to open all exercises here\n//     sectionTitle.innerHTML = `Exercises / <span class='exercises-category'>${element.dataset.name}</span>`\n//   }\n// });\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.querySelector('.group-list');\n  const sectionTitle = document.querySelector(\".section-title\");\n\n  if (container) {\n    container.addEventListener('click', (event) => {\n      const element = event.target.closest('.group-list__item');\n      if (element) {\n        console.log(element.dataset.name);\n        sectionTitle.innerHTML = `Exercises / <span class='exercises-category'>${element.dataset.name}</span>`;\n      }\n    });\n    \n    renderGroupListByFilter();\n  } else {\n    console.warn('Елемент .group-list не знайдено.');\n  }\n});\n\nconst getGroupItemHTMLString = ({ filter, name, imgURL }) => (\n  `\n    <div\n      class=\"group-list__item\"\n      data-name=\"${name}\"\n    >\n      <img\n        class=\"group-list__item-image\"\n        src=\"${imgURL}\"\n      >\n      <div class=\"group-list__item-image-filter\"></div>\n      <div class=\"group-list__item-title\">\n        ${name}\n      </div>\n      <div class=\"group-list__item-subtitle\">\n        ${filter}\n      </div>\n    </div>\n  `\n)\n\nconst getGroupListHTMLString = (categoryList) => {\n  return categoryList.map(getGroupItemHTMLString).join('');\n}\n\nconst renderGroupList = (categoryList) => {\n  const container = document.querySelector('.group-list'); // Added by Inna Boiko\n  if (!container) return; // if no container, do nothing\n  const categoryListHTMLString = getGroupListHTMLString(categoryList);\n  container.innerHTML = categoryListHTMLString;\n}\n\nconst fetchDataByFilter = async (params) => {\n  return await api.getExercisesByFilter(params)\n}\n\nexport const renderGroupListByFilter = async ({ filter = 'Muscles', page = 1, limit = 12 } = {}) => {\n  const data = await fetchDataByFilter({ filter, page, limit });\n\n  renderGroupList(data.results);\n  // TODO\n  // renderGroupListPagination(filter, page, data.totalPages)\n}\n\n// if (container) renderGroupListByFilter();","import { renderGroupListByFilter } from './group-list';\n\nconst buttons = Array.from(document.querySelectorAll('.exercises-menu-button'));\n\nconst execisesMenuButtonHandler = (element) => {\n    const sectionTitle = document.querySelector(\".section-title\");\n    sectionTitle.innerHTML = \"Exercises\";\n    buttons.forEach(el => {\n        el.classList.remove(\"active\");\n    });\n    element.classList.add(\"active\");\n\n    renderGroupListByFilter({ filter: element.textContent })\n}\n\nbuttons.forEach(el =>\n    el.addEventListener('click', () => execisesMenuButtonHandler(el))\n);","const favorites = document.querySelector('.favorites');\n\nconst paginationContainer = document.querySelector('.pagination');\nconst exercisesPerPage = 10;\nlet currentPage = 1;\n\n\n\nfunction renderExercisesPage(favoritesList, page = 1) {\n    const startIndex = (page - 1) * exercisesPerPage;\n    const endIndex = startIndex + exercisesPerPage;\n    const currentExercises = favoritesList.slice(startIndex, endIndex);\n\n    const markup = currentExercises.map(exercise => `\n<li class=\"exercise-card\" data-id=${exercise._id}>\n  <div class=\"top-row\">\n    <div class=\"rating\">\n        <p class=\"badge\">WORKOUT</p>\n        <button class=\"delete-btn\" onclick=\"removeExercise('${exercise._id}')\">\n            <svg class=\"trash-icon\" width=\"18\" height=\"18\">\n                <use href=\"./img/icons.svg#icon-trash\"></use>\n            </svg>\n        </button>\n    </div>\n    <button class=\"start\">\n        Start\n        <svg class=\"icon-arrow-right\" width=\"13\" height=\"13\">\n            <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n        </svg>\n    </button>\n  </div>\n  <div class=\"exercise-info\">\n    <svg class=\"arrow-running-icon\" width=\"24\" height=\"24\">\n        <use href=\"./img/icons.svg#icon-running-stick-figure\"></use>\n    </svg>\n    <p class=\"exercise-name\">${exercise.name\n        .split(' ')\n        .slice(0, 2)\n        .join(' ')}</p>\n  </div>\n  <div class=\"details\">\n    <p>Burned calories: <strong>${exercise.burnedCalories}</strong></p>\n    <p>Body part: <strong>${exercise.bodyPart}</strong></p>\n    <p>Target: <strong>${exercise.target}</strong></p>\n  </div>\n</li>`\n        )\n        .join('');\n    // favorites.insertAdjacentHTML('beforeend', markup);\n    favorites.innerHTML = markup;\n}\n\nfunction renderPagination(favoritesList) {\n    const pageCount = Math.ceil(favoritesList.length / exercisesPerPage);\n    let paginationMarkup = '';\n\n    for (let i = 1; i <= pageCount; i++) {\n        paginationMarkup += `\n            <button class=\"pagination-button ${i === currentPage ? 'active' : ''}\" data-page=\"${i}\">\n                ${i}\n            </button>\n        `;\n    }\n\n    paginationContainer.innerHTML = paginationMarkup;\n\n    document.querySelectorAll('.pagination-button').forEach(button => {\n        button.addEventListener('click', () => {\n            currentPage = Number(button.dataset.page);\n            renderExercisesPage(favoritesList, currentPage);\n            renderPagination(favoritesList);\n        });\n    });\n}\n\nfunction renderUserListFavorites(listFavorites) {\n    renderExercisesPage(listFavorites, currentPage);\n    renderPagination(listFavorites);\n}\n\nfunction removeExercise(exerciseId) {\n    let favoriteExercises = JSON.parse(localStorage.getItem('favorites'));\n\n    favoriteExercises = favoriteExercises.filter(\n        exercise => exercise._id !== exerciseId\n    );\n\n    localStorage.setItem('favorites', JSON.stringify(favoriteExercises));\n\n    document.querySelector(`.exercise-card[data-id=\"${exerciseId}\"]`).remove();\n}\n\nif (window.location.href.endsWith('/favorites.html')) {\n    const favoriteExercises = JSON.parse(localStorage.getItem('favorites'));\n\n    if (favoriteExercises && Array.isArray(favoriteExercises)) {\n        renderUserListFavorites(favoriteExercises);\n    } else {\n        favorites.innerHTML =\n            \"<p class='no-favorites'>It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.</p>\";\n    }\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst rootStyles = getComputedStyle(document.documentElement);\n\nconst popupBgColor = rootStyles.getPropertyValue('--color-popup-bg').trim();\nconst popupTxtColor = rootStyles.getPropertyValue('--color-popup-txt').trim();\nconst popupMainColor = rootStyles.getPropertyValue('--color-popup-main').trim();\nconst popupLineColor = rootStyles.getPropertyValue('--color-popup-line').trim();\n\nclass ToastManager {\n    constructor() {\n        iziToast.settings({\n            timeout: 5000,\n            resetOnHover: true,\n            position: 'topLeft',\n            transitionIn: 'fadeInDown',\n            transitionOut: 'fadeOutUp',\n            progressBar: true,\n            progressBarColor: popupLineColor,\n            backgroundColor: popupBgColor,\n            titleColor: popupMainColor,\n            messageColor: popupTxtColor,\n            theme: 'dark',\n        });\n    }\n\n    success(title, message) {\n        iziToast.success({\n            title: title,\n            message: message,\n        });\n    }\n\n    error(title, message) {\n        iziToast.error({\n            title: title,\n            message: message,\n        });\n    }\n\n    warning(title, message) {\n        iziToast.warning({\n            title: title,\n            message: message,\n        });\n    }\n\n    settings(settings) {\n        iziToast.settings(settings);\n    }\n}\n\nconst toastManager = new ToastManager();\n\nexport default toastManager;","import yourEnergy from './api/your-energy-api.js';\nimport toastManager from './api/toast-manager.js';\n\nif (! window.location.href.endsWith('/favorites.html')) {\n    const form = document.querySelector('.footer-form')\n\n    form.addEventListener('submit', async (event) => {\n        event.preventDefault();\n        const email = form.elements.email.value;\n        const emailPattern = /^\\w+(\\.\\w+)?@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\n        if (emailPattern.test(email)) {\n            try {\n                const response = await yourEnergy.orderSubscription(email);\n                toastManager.success('Success', 'Subscription successful!');\n            } catch (error) {\n                toastManager.error(\n                    'Error',\n                    'Subscription failed: ' + error,\n                );\n            }\n            form.elements.email.value = '';\n        } else {\n            toastManager.warning(\n                'Warning',\n                'Please enter a valid email address.',\n            );\n        }\n    });\n}"],"names":["mobileMenu","mobileMenuOpenButton","mobileMenuCloseButton","currentPath","link","API_CONFIG","FILTER_TYPES","YourEnergy","axios","response","error","data","params","id","rate","email","review","list","promises","result","yourEnergy","today","quote","author","quoteInStorage","container","sectionTitle","event","element","renderGroupListByFilter","getGroupItemHTMLString","filter","name","imgURL","getGroupListHTMLString","categoryList","renderGroupList","categoryListHTMLString","fetchDataByFilter","api","page","limit","buttons","execisesMenuButtonHandler","el","favorites","paginationContainer","exercisesPerPage","currentPage","renderExercisesPage","favoritesList","startIndex","endIndex","markup","exercise","renderPagination","pageCount","paginationMarkup","i","button","renderUserListFavorites","listFavorites","favoriteExercises","rootStyles","popupBgColor","popupTxtColor","popupMainColor","popupLineColor","ToastManager","iziToast","title","message","settings","toastManager","form"],"mappings":"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"}